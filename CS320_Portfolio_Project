import java.io.*;
import java.util.*;

class Automobile {
    private String make;
    private String model;
    private String color;
    private int year;
    private int mileage;

    public Automobile() {
        this.make = "Unknown";
        this.model = "Unknown";
        this.color = "Unknown";
        this.year = 0;
        this.mileage = 0;
    }
    public Automobile(String make, String model, String color, int year, int mileage) {
        this.make = make;
        this.model = model;
        this.color = color;
        this.year = year;
        this.mileage = mileage;
    }
    public String addNewVehicle(String make, String model, String color, int year, int mileage) {
        try {
            Automobile newVehicle = new Automobile(make, model, color, year, mileage);
            return "Vehicle added: " + newVehicle.toString();
        } catch (Exception e) {
            return "Failed to add vehicle: " + e.getMessage();
        }
    }
    public String[] listVehicleInformation() {
        try {
            return new String[]{
                "Make: " + make,
                "Model: " + model,
                "Color: " + color,
                "Year: " + year,
                "Mileage: " + mileage
            };
        } catch (Exception e) {
            return new String[]{"Failed to list vehicle information: " + e.getMessage()};
        }
    }
    public String removeVehicle() {
        try {
            make = "";
            model = "";
            color = "";
            year = 0;
            mileage = 0;
            return "Vehicle removed successfully.";
        } catch (Exception e) {
            return "Failed to remove vehicle: " + e.getMessage();
        }
    }
    public String updateVehicleAttributes(String make, String model, String color, int year, int mileage) {
        try {
            this.make = make;
            this.model = model;
            this.color = color;
            this.year = year;
            this.mileage = mileage;
            return "Vehicle updated successfully.";
        } catch (Exception e) {
            return "Failed to update vehicle attributes: " + e.getMessage();
        }
    }
    @Override
    public String toString() {
        return "Make: " + make + ", Model: " + model + ", Color: " + color + ", Year: " + year + ", Mileage: " + mileage;
    }
}
public class CS320_Portfolio_Project {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        try {
            Automobile vehicle = new Automobile("Toyota", "Corolla", "Blue", 2020, 15000);
            String[] vehicleInfo = vehicle.listVehicleInformation();
            System.out.println("Vehicle Information:");
            for (String info : vehicleInfo) {
                System.out.println(info);
            }
            System.out.println(vehicle.removeVehicle());
            System.out.println(vehicle.addNewVehicle("Honda", "Civic", "Red", 2021, 10000));
            vehicleInfo = vehicle.listVehicleInformation();
            System.out.println("\nUpdated Vehicle Information:");
            for (String info : vehicleInfo) {
                System.out.println(info);
            }
            System.out.println(vehicle.updateVehicleAttributes("Ford", "Focus", "Black", 2022, 5000));
            vehicleInfo = vehicle.listVehicleInformation();
            System.out.println("\nUpdated Vehicle Information:");
            for (String info : vehicleInfo) {
                System.out.println(info);
            }
            System.out.println("\nDo you want to print the vehicle information to a file? (Y/N)");
            String userInput = scanner.nextLine().toUpperCase();
            if (userInput.equals("Y")) {
                printToFile(vehicle);
                System.out.println("Vehicle information printed to C:\\Temp\\Autos.txt");
            } else {
                System.out.println("No file will be printed.");
            }
        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        } finally {
            scanner.close();
        }
    }
    private static void printToFile(Automobile vehicle) {
        try {
            File file = new File("C:\\Temp\\Autos.txt");
            file.getParentFile().mkdirs();
            if (!file.exists()) {
                file.createNewFile(); 
            }
            BufferedWriter writer = new BufferedWriter(new FileWriter(file));
            writer.write(vehicle.toString());
            writer.close();
        } catch (IOException e) {
            System.out.println("Failed to print to file: " + e.getMessage());
        }
    }
}
